# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: '.NET Restore'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: '.NET Build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '-c Release --no-restore'
- task: DotNetCoreCLI@2
  displayName: '.NET Tests'
  inputs:
    command: 'test'
    projects: '**/*ests.csproj'
    arguments: '-c Release --no-build'
- task: DotNetCoreCLI@2
  displayName: '.NET Pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    configuration: 'Release'
    nobuild: true
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '1'
    patchVersion: '0'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.BinariesDirectory)'
    Contents: |
      **/*.nupkg
      **/*.symbols.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)/'
    flattenFolders: true
- task: NuGetCommand@2
  displayName: 'Publish to Nuget'
  condition: eq(variables.isMain, 'true')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget'
